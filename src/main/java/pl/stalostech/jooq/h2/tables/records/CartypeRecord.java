/**
 * This class is generated by jOOQ
 */
package pl.stalostech.jooq.h2.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import pl.stalostech.jooq.h2.tables.Cartype;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CartypeRecord extends UpdatableRecordImpl<CartypeRecord> implements Record4<Integer, Integer, String, Date> {

	private static final long serialVersionUID = -1813898204;

	/**
	 * Setter for <code>PUBLIC.CARTYPE.ID</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.CARTYPE.ID</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.CARTYPE.DOORS</code>.
	 */
	public void setDoors(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.CARTYPE.DOORS</code>.
	 */
	public Integer getDoors() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.CARTYPE.MODEL</code>.
	 */
	public void setModel(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.CARTYPE.MODEL</code>.
	 */
	public String getModel() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.CARTYPE.AVAILABLE_YEAR</code>.
	 */
	public void setAvailableYear(Date value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.CARTYPE.AVAILABLE_YEAR</code>.
	 */
	public Date getAvailableYear() {
		return (Date) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, Date> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, Date> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Cartype.CARTYPE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Cartype.CARTYPE.DOORS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Cartype.CARTYPE.MODEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field4() {
		return Cartype.CARTYPE.AVAILABLE_YEAR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getDoors();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getModel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value4() {
		return getAvailableYear();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CartypeRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CartypeRecord value2(Integer value) {
		setDoors(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CartypeRecord value3(String value) {
		setModel(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CartypeRecord value4(Date value) {
		setAvailableYear(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CartypeRecord values(Integer value1, Integer value2, String value3, Date value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CartypeRecord
	 */
	public CartypeRecord() {
		super(Cartype.CARTYPE);
	}

	/**
	 * Create a detached, initialised CartypeRecord
	 */
	public CartypeRecord(Integer id, Integer doors, String model, Date availableYear) {
		super(Cartype.CARTYPE);

		setValue(0, id);
		setValue(1, doors);
		setValue(2, model);
		setValue(3, availableYear);
	}
}
