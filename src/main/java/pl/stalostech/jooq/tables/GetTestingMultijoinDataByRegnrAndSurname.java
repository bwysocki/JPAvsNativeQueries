/**
 * This class is generated by jOOQ
 */
package pl.stalostech.jooq.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import pl.stalostech.jooq.Jpavsnative;
import pl.stalostech.jooq.tables.records.GetTestingMultijoinDataByRegnrAndSurnameRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetTestingMultijoinDataByRegnrAndSurname extends TableImpl<GetTestingMultijoinDataByRegnrAndSurnameRecord> {

	private static final long serialVersionUID = 1248269173;

	/**
	 * The reference instance of <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname</code>
	 */
	public static final GetTestingMultijoinDataByRegnrAndSurname GET_TESTING_MULTIJOIN_DATA_BY_REGNR_AND_SURNAME = new GetTestingMultijoinDataByRegnrAndSurname();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<GetTestingMultijoinDataByRegnrAndSurnameRecord> getRecordType() {
		return GetTestingMultijoinDataByRegnrAndSurnameRecord.class;
	}

	/**
	 * The column <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname.name</code>.
	 */
	public final TableField<GetTestingMultijoinDataByRegnrAndSurnameRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname.surname</code>.
	 */
	public final TableField<GetTestingMultijoinDataByRegnrAndSurnameRecord, String> SURNAME = createField("surname", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname.carid</code>.
	 */
	public final TableField<GetTestingMultijoinDataByRegnrAndSurnameRecord, Integer> CARID = createField("carid", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname.registrationnr</code>.
	 */
	public final TableField<GetTestingMultijoinDataByRegnrAndSurnameRecord, String> REGISTRATIONNR = createField("registrationnr", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname.productionyear</code>.
	 */
	public final TableField<GetTestingMultijoinDataByRegnrAndSurnameRecord, Timestamp> PRODUCTIONYEAR = createField("productionyear", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname.doors</code>.
	 */
	public final TableField<GetTestingMultijoinDataByRegnrAndSurnameRecord, Integer> DOORS = createField("doors", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname.model</code>.
	 */
	public final TableField<GetTestingMultijoinDataByRegnrAndSurnameRecord, String> MODEL = createField("model", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname.availableyear</code>.
	 */
	public final TableField<GetTestingMultijoinDataByRegnrAndSurnameRecord, Timestamp> AVAILABLEYEAR = createField("availableyear", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname</code> table reference
	 */
	public GetTestingMultijoinDataByRegnrAndSurname() {
		this("get_testing_multijoin_data_by_regnr_and_surname", null);
	}

	/**
	 * Create an aliased <code>jpavsnative.get_testing_multijoin_data_by_regnr_and_surname</code> table reference
	 */
	public GetTestingMultijoinDataByRegnrAndSurname(String alias) {
		this(alias, GET_TESTING_MULTIJOIN_DATA_BY_REGNR_AND_SURNAME);
	}

	private GetTestingMultijoinDataByRegnrAndSurname(String alias, Table<GetTestingMultijoinDataByRegnrAndSurnameRecord> aliased) {
		this(alias, aliased, new Field[2]);
	}

	private GetTestingMultijoinDataByRegnrAndSurname(String alias, Table<GetTestingMultijoinDataByRegnrAndSurnameRecord> aliased, Field<?>[] parameters) {
		super(alias, Jpavsnative.JPAVSNATIVE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GetTestingMultijoinDataByRegnrAndSurname as(String alias) {
		return new GetTestingMultijoinDataByRegnrAndSurname(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public GetTestingMultijoinDataByRegnrAndSurname rename(String name) {
		return new GetTestingMultijoinDataByRegnrAndSurname(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public GetTestingMultijoinDataByRegnrAndSurname call(String regnrparam, String surnameparam) {
		return new GetTestingMultijoinDataByRegnrAndSurname(getName(), null, new Field[] { DSL.val(regnrparam), DSL.val(surnameparam) });
	}

	/**
	 * Call this table-valued function
	 */
	public GetTestingMultijoinDataByRegnrAndSurname call(Field<String> regnrparam, Field<String> surnameparam) {
		return new GetTestingMultijoinDataByRegnrAndSurname(getName(), null, new Field[] { regnrparam, surnameparam });
	}
}
